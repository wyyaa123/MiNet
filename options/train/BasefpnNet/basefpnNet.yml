# ------------------------------------------------------------------------
# Copyright (c) 2022 megvii-model. All Rights Reserved.
# ------------------------------------------------------------------------
# Modified from BasicSR (https://github.com/xinntao/BasicSR)
# Copyright 2018-2020 BasicSR Authors
# ------------------------------------------------------------------------
# general settings
name: BaseFPNNet-GoPro
model_type: ImageRestorationModel
scale: 1
num_gpu: 1
manual_seed: 100

datasets:
  train:
    name: gopro-train
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/train/sharp_crops.lmdb
    dataroot_lq: ./datasets/GoPro/train/blur_crops.lmdb

    filename_tmpl: '{}'
    io_backend:
      type: lmdb

    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8 # 每一个GPU 的data loader 读取进程数目
    batch_size_per_gpu: 8 # 每块GPU 上的batch size
    dataset_enlarge_ratio: 1 # 放大dataset 的长度倍数(默认为1)。可以扩大一个 epoch 所需 iterations
    prefetch_mode: ~

  val:
    name: gopro-test
    type: PairedImageDataset
    dataroot_gt: ./datasets/GoPro/test/target.lmdb
    dataroot_lq: ./datasets/GoPro/test/input.lmdb
    io_backend:
      type: lmdb


network_g:
  type: BaseFPNNet
  inp_ch: 3


# path
path:
  pretrain_network_g: ~
  param_key_g: params
  strict_load_g: true
  resume_state: ~

# training settings
train:
  # ema_decay: 0.999
  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 200000
    eta_min: !!float 1e-7

  total_iter: 200000
  use_grad_clip: true
  warmup_iter: -1 # no warm up

  # losses
  pixel_opt:
    type: PSNRLoss
    loss_weight: 1
    reduction: mean
  # perceptual_opt:
  #   beta: !!float 0.01
  #   type: PerceptualLoss
  #   layer_weights:
  #     'conv5_4': 1  # before relu
  #   vgg_type: vgg19
  #   use_input_norm: true
  #   range_norm: false
  #   perceptual_weight: 1.0
  #   style_weight: 0
  #   criterion: l1


# validation settings
val:
  window_size: 0
  val_freq: !!float 5e3
  rgb2bgr: true
  use_image: true
  save_img: true
  pbar: true

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 200
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
